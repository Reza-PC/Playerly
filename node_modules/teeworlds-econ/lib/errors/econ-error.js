var EconError,
  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

EconError = (function(superClass) {
  extend(EconError, superClass);

  function EconError() {
    return EconError.__super__.constructor.apply(this, arguments);
  }

  EconError.prototype.name = 'EconError';

  return EconError;

})(Error);

module.exports = EconError;
